
# Note: Run -----------------------------------------------------------------------------------------------------------

run:
  issues-exit-code: 0
  timeout: 10m
  modules-download-mode: mod

  skip-dirs-use-default: false
  skip-files:
    - ".*\\.weirdfile\\.go$"
    - lib/bad.go

  allow-parallel-runners: true


# Note: Output --------------------------------------------------------------------------------------------------------

output:
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: false
  print-linter-name: true
  uniq-by-line: false
  sort-results: true

# Issues: -------------------------------------------------------------------------------------------------------------

issues:
  # alternativly - --new-from-rev=HEAD
  # new-from-rev: HEAD
  max-same-issues: 10
  fix: false

  exclude-rules:
  - path: ".*_test.go"
    linters:
    - revive

  - text: "use an underscore in package name"
    linters:
    - revive # revive@var-naming rule

  - path: _test\.go
    linters:
      - gocyclo
      - errcheck
      - dupl
      - gosec
      - bodyclose

  - linters:
      - lll
    source: "^//go:generate "

linters:
  enable-all: true

  disable:
  - deadcode           # covered by `unused` and `govet@varcheck`
  - funlen             # revive@function-length (alternative)
  - gocognit           # revive@cognitive-complexity (alternative)
  - gocyclo            # revive@cyclomatic (alternative)
  - cyclop             # revive@cyclomatic (alternative)
  - lll                # revive@line-length-limit (alternative)
  - gci                # note: we have to walk long way to it.
  - godox              # not really useful to react to FIXME/TODO/etc...
  - ineffassign        # staticcheck@SA4006
  - varcheck           # covered by `unused`
  - ireturn            # its not a time
  - testpackage        # @useless
  - gochecknoglobals   # @useless
  - paralleltest       # @todo


linters-settings:

  forbidigo:
    # Forbid the following identifiers (list of regexp).
    forbid:
      - ^print.*$
      - '\.Debug\(\)\.' # db Debug()

  gci:
    local-prefixes: wing.security/nest

  gocritic:
    enabled-tags: [ experimental, diagnostic, opinionated, performance, style ]
    disabled-checks:
      - whyNoLint
      - emptyStringTest
      - hugeParam         # don't applied to existing codebase.
      - commentFormatting # should be handled automatically by gofumpt

  godot:
    scope: declarations
    period: false
    capital: true
    exclude:
      # Exclude todo and fixme comments.
      - "^fixme:"
      - "^note:"
      - "^todo:"

  maligned:
    suggest-new: true

  nlreturn:
    block-size: 2

  nolintlint:
    allow-leading-space: true
    allow-unused: true
    require-explanation: false
    require-specific: false

  revive:
    enable-all-rules: true
    ignore-generated-header: true
    confidence: 0.01
    severity: warning
    rules:
      - name: add-constant
        severity: warning
        arguments:
        - maxLitCount: "3"
          allowStrs: ''
          allowInts: "0,1,2"
          allowFloats: "0.0,0.,1.0,1.,2.0,2."

      - name: argument-limit
        severity: warning
        arguments: [ 3 ]

      - name: banned-characters
        severity: warning
        disabled: true

      - name: add-constant
        disabled: true
        severity: warning
        arguments: [ 30 ]

      - name: cognitive-complexity
        severity: warning
        arguments: [ 30 ]

      - name: cyclomatic
        severity: warning
        arguments: [ 30 ]

      - name: defer
        severity: warning
        arguments:
        - - "call-chain"
          - "loop"
          - "recover"
          - "return"
          - "method-call"

      - name: exported
        severity: warning
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"

      - name: function-length
        severity: warning
        arguments:
        - 40     # max statements
        - 60     # max lines

      - name: file-header
        disabled: true

      - name: get-return
        severity: warning

      - name: function-result-limit
        severity: warning
        arguments: [ 2 ]

      - name: imports-blacklist
        severity: warning
        arguments:
        - "crypto/md5"
        - "crypto/sha1"

      - name: line-length-limit
        arguments: [ 120 ]

      - name: max-public-structs
        severity: warning
        arguments: [ 2 ]

      - name: string-format
        severity: warning
        arguments:
        - [ "stringFormatMethod1", "/^([^A-Z]|$)/", "must not start with a capital letter"]


      # TODO(butuzov):
      - name: unhandled-error
        severity: warning
        arguments:
          - fmt.Printf
          - fmt.Print
          - fmt.Println

      - name: var-naming
        severity: warning
        arguments:
        - - "ID" # allow
        - - "VM" # deny

  tagliatelle:
    # Check the struck tag name case.
    case:
      use-field-name: true
      rules:
        # Possible Values: `camel`, `pascal`, `kebab`, `snake`,
        # `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake

  varnamelen:
    max-distance: 5 # five lives of code (see book)
    ignore-decls:
    - c echo.Context
    - e *echo.Echo
    - db *gorm.DB

  wrapcheck:
    ignoreSigRegexps:
      # All responses from the echo's Context
      - \(github\.com\/labstack\/echo\/v4\.Context\).(NoContent|Redirect|Stream|Blob|String)
      - \(github\.com\/labstack\/echo\/v4\.Context\).(JSON(P(retty)|Blob)?|File|Attachment)
      - \(github\.com\/labstack\/echo\/v4\.Context\).(HTML|XML(P(retty)|Blob)?|Inline)
      - \(github\.com\/labstack\/echo\/v4\.Context\)\.(HTML|XML(P(retty)|Blob)?|Inline)
# Severity: -----------------------------------------------------------------------------------------------------------

severity:
  default-severity: error
  case-sensitive: false

  # Coloring According Severity (not implemented, WIP)
  colors:
    error: red
    warn: yellow
    info: blue

  rules:
  - linters:
    - exhaustivestruct
    - gomnd
    - godot
    - lll
    severity: info

  - linters:
    - goerr113
    severity: warn
